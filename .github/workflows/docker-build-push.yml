name: Docker Build and Push

on:
  push:
    tags:
      - '*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download and unzip server pack
      run: |
        wget https://mediafilez.forgecdn.net/files/4787/577/Fantasy_Realm_Server_Pack_v3.zip
        mkdir -p /home/runner/Fantasy_Realm_Server_Pack_v3
        unzip Fantasy_Realm_Server_Pack_v3.zip -d /home/runner/Fantasy_Realm_Server_Pack_v3

    - name: Replace COPY path in Dockerfile
      run: sed -i 's|COPY ./Fantasy_Realm_Server_Pack_v3 /root/Fantasy_Realm_Server_Pack_v3|COPY ./Fantasy_Realm_Server_Pack_v3 /home/runner/Fantasy_Realm_Server_Pack_v3|' Dockerfile

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image for tagged release (AMD64)
      run: |
        docker build -t your-docker-hub-username/your-image-name:${{ github.ref_name }} .
        docker push your-docker-hub-username/your-image-name:${{ github.ref_name }}

    - name: Set up QEMU for ARM64
      run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Build and push Docker image for tagged release (ARM64)
      run: |
        docker buildx create --use
        docker buildx build --platform linux/amd64,linux/arm64 -t your-docker-hub-username/your-image-name:${{ github.ref_name }} .
        docker buildx build --platform linux/amd64,linux/arm64 -t your-docker-hub-username/your-image-name:${{ github.ref_name }} --push

    - name: Build and push Docker image for latest (ARM64)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 -t your-docker-hub-username/your-image-name:latest .
        docker buildx build --platform linux/amd64,linux/arm64 -t your-docker-hub-username/your-image-name:latest --push


